{"mappings":"ACcE,SAAS,EAAY,CAAO,EAK1B,AAHkB,SAAS,aAAa,CAAC,eAG/B,SAAS,CAAG,EACnB,GAAG,CAAC,AAAA,GAAU;A;AAEP,cAAA,EAAE,EAAO,IAAI,CAAC;AACd,cAAA,EAAE,EAAO,UAAU,CAAC;AACpB,cAAA,EAAE,EAAO,WAAW,CAAC;A;AAE7B,MAAA,CAAC,EACA,IAAI,CAAC,GACV,EA8BA,AAzDF,iBACI,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,4DACvB,EAAU,MAAM,EAAS,IAAI,GAEnC,EAAY,GACZ,AAwBJ,SAA2B,CAAO,EAChC,IAAM,EAAc,SAAS,aAAa,CAAC,WAGrC,EAAe,SAAS,gBAAgB,CAAC,MAG/C,EAAY,gBAAgB,CAAC,QAAS,KACpC,IAAM,EAAQ,EAAY,KAAK,CAAC,WAAW,GAK3C,EAJiB,EAAQ,MAAM,CAAC,AAAA,GAC9B,EAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IACnC,EAAO,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,IAG7C,GAGA,EAAa,OAAO,CAAC,AAAA,IACnB,EAAO,gBAAgB,CAAC,QAAS,KAC/B,IAAM,EAAM,EAAO,OAAO,CAAC,GAAG,CAE9B,EADe,EAAQ,IAAI,CAAC,CAAC,EAAG,IAAO,CAAC,CAAC,EAAI,CAAG,CAAC,CAAC,EAAI,CAAG,EAAI,IAE/D,EACF,EACF,EAhDsB,EACpB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,wBAAyB,EACzC,CACF","sources":["<anon>","src/js/script.js"],"sourcesContent":["var $3fba0bda95caa784$exports = {};\n//funktion för att hämta data\nasync function $3fba0bda95caa784$var$fetchCourses() {\n    try {\n        const response = await fetch('https://webbutveckling.miun.se/files/ramschema_ht24.json'); //hämta data från url\n        const courses = await response.json(); //omvandla till json\n        $3fba0bda95caa784$var$renderTable(courses);\n        $3fba0bda95caa784$var$addEventListeners(courses);\n    } catch (error) {\n        console.error(\"kunde inte h\\xe4mta data\", error); //hantera fel\n    }\n}\n//funktion för att visa datan i en tabell\nfunction $3fba0bda95caa784$var$renderTable(courses) {\n    const tableBody = document.querySelector('#table-body');\n    //skapar rader i tabellen baserat på det vi har\n    tableBody.innerHTML = courses.map((course)=>`\n        <tr>\n          <td>${course.code}</td>          \n          <td>${course.coursename}</td>    \n          <td>${course.progression}</td>  \n        </tr>\n      `).join(''); //slår ihop alla rader till en html sträng\n}\n//funktion för att lägga till filtrering och sortering\nfunction $3fba0bda95caa784$var$addEventListeners(courses) {\n    const searchInput = document.querySelector('#search');\n    //tabellens rubriker (<th>)\n    const tableHeaders = document.querySelectorAll('th');\n    //filtrering varje gång användaren skriver i sökfältet\n    searchInput.addEventListener('input', ()=>{\n        const query = searchInput.value.toLowerCase(); //gör sökfrasen till lower case\n        const filtered = courses.filter((course)=>course.code.toLowerCase().includes(query) || //kontrollera om kurskod matchar\n            course.coursename.toLowerCase().includes(query) //kontrollera om kursnamn matchar\n        );\n        $3fba0bda95caa784$var$renderTable(filtered); //visa bara de kurser som matchar\n    });\n    //sortering\n    tableHeaders.forEach((header)=>{\n        header.addEventListener('click', ()=>{\n            const key = header.dataset.key; //vilken kolumn som ska sorteras\n            const sorted = courses.sort((a, b)=>a[key] > b[key] ? 1 : -1); //sortera stigande\n            $3fba0bda95caa784$var$renderTable(sorted); //visa det man har sorterat\n        });\n    });\n}\n//starta hela grejen\n$3fba0bda95caa784$var$fetchCourses();\n\n\n//# sourceMappingURL=index.22e2c91d.js.map\n","//funktion för att hämta data\nasync function fetchCourses() {\n    try {\n      const response = await fetch('https://webbutveckling.miun.se/files/ramschema_ht24.json'); //hämta data från url\n      const courses = await response.json(); //omvandla till json\n  \n      renderTable(courses);\n      addEventListeners(courses);\n    } catch (error) {\n      console.error('kunde inte hämta data', error); //hantera fel\n    }\n  }\n  \n  //funktion för att visa datan i en tabell\n  function renderTable(courses) {\n   \n    const tableBody = document.querySelector('#table-body');\n  \n    //skapar rader i tabellen baserat på det vi har\n    tableBody.innerHTML = courses\n      .map(course => `\n        <tr>\n          <td>${course.code}</td>          \n          <td>${course.coursename}</td>    \n          <td>${course.progression}</td>  \n        </tr>\n      `)\n      .join(''); //slår ihop alla rader till en html sträng\n  }\n  \n  //funktion för att lägga till filtrering och sortering\n  function addEventListeners(courses) {\n    const searchInput = document.querySelector('#search');\n\n    //tabellens rubriker (<th>)\n    const tableHeaders = document.querySelectorAll('th');\n  \n    //filtrering varje gång användaren skriver i sökfältet\n    searchInput.addEventListener('input', () => {\n      const query = searchInput.value.toLowerCase(); //gör sökfrasen till lower case\n      const filtered = courses.filter(course =>\n        course.code.toLowerCase().includes(query) || //kontrollera om kurskod matchar\n        course.coursename.toLowerCase().includes(query) //kontrollera om kursnamn matchar\n      );\n      renderTable(filtered); //visa bara de kurser som matchar\n    });\n  \n    //sortering\n    tableHeaders.forEach(header => {\n      header.addEventListener('click', () => {\n        const key = header.dataset.key; //vilken kolumn som ska sorteras\n        const sorted = courses.sort((a, b) => (a[key] > b[key] ? 1 : -1)); //sortera stigande\n        renderTable(sorted); //visa det man har sorterat\n      });\n    });\n  }\n  \n  //starta hela grejen\n  fetchCourses();\n  "],"names":["$3fba0bda95caa784$var$renderTable","courses","tableBody","document","querySelector","innerHTML","map","course","code","coursename","progression","join","$3fba0bda95caa784$var$fetchCourses","response","fetch","json","$3fba0bda95caa784$var$addEventListeners","searchInput","tableHeaders","querySelectorAll","addEventListener","query","value","toLowerCase","filter","includes","forEach","header","key","dataset","sort","a","b","error","console"],"version":3,"file":"index.22e2c91d.js.map"}